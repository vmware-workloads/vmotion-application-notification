[DEFAULT]
# Name of the application registered for notifications
app_name = my_app

# Interval in seconds that we check for a notification from the host.
# The default is every 1 second.
check_interval_seconds = 1

# Command executed to prepare the application for a vMotion.
pre_vmotion_cmd = ping -c 20 8.8.8.8

# Command executed to resume the application after a vMotion.
post_vmotion_cmd = ping -c 10 8.8.8.8


[Token]
# Create a token file on a successful registration.
# - If disabled (no), if the service crashes and the token is still registered, the VM will need to number
#   rebooted to clear the existing registration.token_file
# - If enabled (yes), the token is saved to a file upon successful registration. When the program starts we
#   check to see if a token file exists, and try to unregister it. This eliminates the need to reboot if the
#   application terminates uncleanly.
token_file_create = no

# Obfuscate the token in the logfile.
# - If disabled (no), the token is written in the log files.
# - If enabled (yes), we obfuscate the token in the log files.
token_obfuscate_logfile = yes

[Logging]
# Log files
service_logfile_ = /var/log/vmnotification/vmnotification.log
vmotion_logfile = /var/log/vmnotification/vmotion.log
timeout_logfile = /var/log/vmnotification/timeout.log

# Logging verbosity in the service log file
service_logfile_level  = DEBUG

# Logging verbosity in the service console
service_console_level  = WARNING

# Maximum size of the log file in Bytes
service_logfile_maxsize_bytes = 10485760
vmotion_logfile_maxsize_bytes = 10485760
timeout_logfile_maxsize_bytes = 10485760

# Number of log files to keep (.log, .log.1, .log.2, ...). Once this number of log files is reached, the oldest
# file is deleted.
service_logfile_count = 10
vmotion_logfile_count = 3
timeout_logfile_count = 3